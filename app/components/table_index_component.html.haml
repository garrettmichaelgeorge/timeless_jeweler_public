/ LOCAL VARIABLES:
/ @title
/ @columns
/ @resources

/ returns array with values for List.js columns
- list_values = @columns.keys.map { |column| column.to_s.camelize(:lower) } 

/ list_values expected output
/ data-list='{"valueNames": ["orders-order", "orders-product", "orders-date", "orders-total", "orders-status", "orders-method"]}'
/ list_values actual output
/ data-list="{'valueNames': [&quot;id&quot;, &quot;title&quot;, &quot;firstName&quot;, &quot;lastName&quot;, &quot;suffix&quot;, &quot;ringSize&quot;, &quot;necklaceLength&quot;, &quot;birthday&quot;]}"

.card
  .card-header

    / Search
    %form
      .input-group.input-group-flush
        .input-group-prepend
          %span.input-group-text
            %i.fe.fe-search
        %input.form-control.list-search(type="search" placeholder="Search")

    / Dropdown
    .dropdown
      %button#bulkActionDropdown.btn.btn-sm.btn-white.dropdown-toggle(type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false") 
        Bulk action
        .dropdown-menu.dropdown-menu-right(aria-labelledby="bulkActionDropdown")
          = link_to "Hide", "#", class: "dropdown-item"
          = link_to "Delete", "#", class: "dropdown-item"

  / Table
  .table-responsive{ data: { list: "{'valueNames': #{list_values}}" } }
    %table.table.table-sm.table-nowrap.card-table.table-hover(id=@title)
      %caption.d-none= @title
      %thead
        %tr
          / Table Heading
          %th
            = render partial: 'layouts/components/checkbox_table', locals: { id: 'all', collection: @title }
          - @columns.each_with_index do |column, index|
            %th(scope="col")= link_to column[1], "#", class: "text-muted list_sort", data_sort: list_values[index]
          %th{scope: "col", colspan: restful_actions.count}

      / Table Body
      %tbody.list
        - @resources.each do |resource|
          / Table Row
          %tr
            %td
              = render partial: 'layouts/components/checkbox_table', locals: { id: resource.id, collection: resource }
            - @columns.each_with_index do |column, index|
              - if column[0].to_s.downcase == 'id'
                %th{scope: "row", class: list_values[index]}
                  - if column_for_show?
                    = link_to resource.send(column[0]), resource
                  - else
                    = resource.send(column[0])
              - elsif column[0].is_a?(Array)
                -# To access nested associations via a chain of method calls, send the column key as an array of symbolized methods in their call order 
                -# e.g. {columns => {[:specific, :first_name] => "First Name"}
                -# => @party.specific.first_name
                %td{class: list_values[index]}
                  - if column[2]
                    = link_to column[0].inject(resource, :send), column[2]
                  - else
                    = column[0].inject(resource, :send)
              - else
                %td{class: list_values[index]}
                  - if column[2]
                    = link_to resource.send(column[0]), column[2]
                  - else
                    = resource.send(column[0])
            -# %td= link_to 'Show', resource if column_for_show?
            %td= link_to 'Edit', edit_path(resource) if column_for_edit?
            %td= link_to 'Delete', resource, method: :delete, data: { confirm: 'Are you sure?' }, class: "danger" if column_for_destroy?