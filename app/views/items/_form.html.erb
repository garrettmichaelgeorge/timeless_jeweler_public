<% wrapper_mappings = { boolean: :custom_boolean,
                        check_boxes: :custom_collection,
                        date: :custom_multi_select,
                        datetime: :custom_multi_select,
                        file: :custom_file,
                        radio_buttons: :custom_collection,
                        range: :custom_range,
                        time: :custom_multi_select,
                        select: :custom_multi_select } %>

<% data_reflex_submit = { reflex: 'input->ItemBuilderReflex#submit',
                          reflex_dataset: 'combined',
                          controller: 'item-builder' } %>

<% form_defaults = { input_html: { data: data_reflex_submit } } %>

<% categories = item.class::CATEGORIES %>

<%= simple_form_for item, wrapper_mappings: wrapper_mappings,
                          defaults: form_defaults,
                          data: { controller: 'nested-form',
                                  nested_form_wrapper_selector_value: '.nested-form-wrapper' } do |f| %>

  <%= f.error_notification %>

  <legend>Choose an item type</legend>

  <%= f.input :category, collection: categories,
                         as: :radio_buttons,
                         group_method: :all,
                         data: {} %>

  <section id="basic-info-section">
    <%= f.input :name %>
    <%= f.input :description %>
    <%= f.association :style, label_method: :name, prompt: 'Please select a style' %>
    <%= f.input :cost_cents %>
    <%= f.input :price_cents %>
    <%= f.input :notes %>
  </section>

  <section id="item-category-section">
  <% f.simple_fields_for :salable do |piece_fields| %>
    <%= render 'piece_fields', f: piece_fields %>
  <% end %>

    <%# render(ProductFields::GemstoneComponent.new(f: f)) %>
    <%# render(ProductFields::MiscellaneousComponent.new(f: f)) %>
  </section>

  <%= f.button :submit, class: "btn-primary" %>
  <%= f.button :button, "Reset", type: "reset", class: "btn-outline-secondary" %>
<% end %>
